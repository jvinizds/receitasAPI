{"version":3,"sources":["App.js","index.js"],"names":["App","useState","procuraTipo","setProcuraTipo","prato","setPrato","mostrarPrato","setMostrarPrato","fecharPrato","a","fetch","then","response","json","data","meals","catch","error","console","message","ListaIngredientesPrato","ingredientesPrato","medidasPrato","ingredienteCompletoPrato","i","j","key","indexOf","k","length","listaIngredientesPrato","map","ingrediente","coquetel","setCoquetel","mostrarCoquetel","setMostrarCoquetel","fecharCoquetel","drinks","ListaIngredientesCoquetel","ingredientesCoquetel","medidasCoquetel","ingredienteCompletoCoquetel","x","z","g","listaIngredientesCoquetel","Navbar","bg","Brand","href","className","size","Form","Row","Col","xs","Control","as","id","onChange","e","target","value","Button","variant","onClick","buscaCoquetel","buscaPrato","Modal","show","onHide","backdrop","keyboard","scrollable","Header","closeButton","Title","strMeal","OverlayTrigger","placement","delay","hide","overlay","props","Tooltip","src","strMealThumb","width","alt","Body","strArea","strCategory","strInstructions","strYoutube","Footer","strDrink","strDrinkThumb","strAlcoholic","strGlass","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8efbe704.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { FaCocktail, FaImage } from 'react-icons/fa'\nimport { BiLinkExternal } from 'react-icons/bi'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\nimport Modal from 'react-bootstrap/Modal'\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Tooltip from 'react-bootstrap/Tooltip'\n\nfunction App() {\n\n  /*Constante para definir o tipo de pesquisa: prato ou coquetel*/\n  const [procuraTipo, setProcuraTipo] = useState('')\n\n  /*Função para definir qual será a busca(função) feita: prato ou coquetel*/\n  function pesquisaTipo() {\n    if (procuraTipo === 'coquetel') {\n      buscaCoquetel();\n    } else {\n      buscaPrato();\n    }\n  }\n\n  /*-------------------------------------------------------------------------------------*/\n  /*A partir dessa linha, apenas codigo relacionado a receita de prato\n    Criado constante para a receita do prato.*/\n  const [prato, setPrato] = useState([])\n\n\n  /*Constante para mudar o estado do modal do coquetel(Abrir e Fechar)*/\n  const [mostrarPrato, setMostrarPrato] = useState(false)\n\n  /*Contante para fechar a modal (para abrir foi direto pela função)*/\n  const fecharPrato = () => setMostrarPrato(false)\n\n  /*Função para trazer a receita do prato usando a API TheMealDB */\n  async function buscaPrato() {\n    let urlPrato = \"https://www.themealdb.com/api/json/v1/1/random.php\"\n\n    await fetch(urlPrato)\n      .then(response => response.json())\n      .then(data => {\n        setPrato(data.meals[0])\n      })\n      .catch(function (error) {\n        console.error(`Erro ao obter prato: ${error.message}`)\n      })\n\n      setMostrarPrato(true)\n  }\n\n  /*Função para formatar ingredientes e as medidas do prato e assim lista-los já formatado*/\n  function ListaIngredientesPrato() {\n\n    let ingredientesPrato = []\n    let medidasPrato = []\n    let ingredienteCompletoPrato = []\n    let i = 0\n    let j = 0\n\n    /*For para passar por todas as propriedade e armazenar em um outro array apenas os ingredientes, caso não sejam nulos, vazios, etc*/\n    for (const key in prato) {\n      if (key.indexOf(\"strIngredient\") > -1) \n      {\n          if(!prato[key])\n          {\n            continue;\n          }else{\n            ingredientesPrato[i] = prato[key]\n            i = i+1\n          }\n      }\n    }\n\n    //let listaIngredientesFormatadoPrato = ingredientesPrato.map((ingrediente) => ingrediente.charAt(0).toUpperCase() + ingrediente.slice(1));\n\n    //let listaIngredientes = listaIngredientesFormatado.map((ingrediente) => <li>{ingrediente}</li>);\n\n    /*For para passar por todas as propriedade e armazenar em um outro array apenas as medidas, caso não sejam nulos, vazios, etc*/\n    for (const key in prato) {\n      if (key.indexOf(\"strMeasure\") > -1) \n      {\n          if(!prato[key])\n          {\n            continue;\n          }else{\n            medidasPrato[j] = prato[key]\n            j = j+1\n          }\n      }\n    }\n\n    //let listaMedidasFormatada = medidas.map((medida) => medida.charAt(0).toUpperCase() + medida.slice(1));\n\n    /*For para passar pelos ingrediente e medidas e junta-los em um outro array para ficarem completos*/\n    for (let k = 0; k < ingredientesPrato.length; k++) {\n      \n      if (!medidasPrato[k] ) {\n        ingredienteCompletoPrato[k] = ingredientesPrato[k]\n      }else{\n        ingredienteCompletoPrato[k] = medidasPrato[k] + ' of ' + ingredientesPrato[k]\n      }\n    }\n\n    let listaIngredientesPrato = ingredienteCompletoPrato.map((ingrediente) => <li>{ingrediente}</li>);\n\n   return(\n    <>{listaIngredientesPrato}</>\n   )\n  }\n\n  /*Const para ativa o ToolTip na Modal para exibir a imagem do Coquetel */\n  const imagemPrato = (props) => (\n    <Tooltip {...props}>\n      <img src={prato.strMealThumb} width={230} alt='Imagem do Prato' />\n    </Tooltip>\n  );\n\n  /*Codigo relacionado ao prato acabou */\n  /*-------------------------------------------------------------------------------------*/\n\n  /*-------------------------------------------------------------------------------------*/\n  /*A partir dessa linha, apenas codigo relacionado a receita de coquetel\n    Criado constante para a receita do coquetel.*/\n  const [coquetel, setCoquetel] = useState([])\n\n  /*Constante para mudar o estado do modal do coquetel(Abrir e Fechar)*/\n  const [mostrarCoquetel, setMostrarCoquetel] = useState(false)\n\n  /*Contante para fechar a modal (para abrir foi direto pela função)*/\n  const fecharCoquetel = () => setMostrarCoquetel(false)\n\n  /*Função para trazer a receita do coquete usando a API TheCocktailDB */\n  async function buscaCoquetel() {\n    let urlCoquetel = \"https://www.thecocktaildb.com/api/json/v1/1/random.php\"\n\n    await fetch(urlCoquetel)\n      .then(response => response.json())\n      .then(data => {\n        setCoquetel(data.drinks[0])\n      })\n      .catch(function (error) {\n        console.error(`Erro ao obter coquetel: ${error.message}`)\n      })\n\n    setMostrarCoquetel(true)\n  }\n\n  /*Função para formatar ingredientes e as medidas do coquetel e assim lista-los já formatado*/\n  function ListaIngredientesCoquetel() {\n\n    let ingredientesCoquetel = []\n    let medidasCoquetel = []\n    let ingredienteCompletoCoquetel = []\n    let x = 0\n    let z = 0\n\n    /*For para passar por todas as propriedade e armazenar em um outro array apenas os ingredientes, caso não sejam nulos, vazios, etc*/\n    for (const key in coquetel) {\n      if (key.indexOf(\"strIngredient\") > -1) \n      {\n          if(!coquetel[key])\n          {\n            continue\n          }else{\n            ingredientesCoquetel[x] = coquetel[key]\n            x = x+1\n          }\n      }\n    }\n\n    /*For para passar por todas as propriedade e armazenar em um outro array apenas as medidas, caso não sejam nulos, vazios, etc*/\n    for (const key in coquetel) {\n      if (key.indexOf(\"strMeasure\") > -1) \n      {\n          if(!coquetel[key])\n          {\n            continue\n          }else{\n            medidasCoquetel[z] = coquetel[key]\n            z = z+1\n          }\n      }\n    }\n\n    /*For para passar pelos ingrediente e medidas e junta-los em um outro array para ficarem completos*/\n    for (let g = 0; g < ingredientesCoquetel.length; g++) {\n      if (!medidasCoquetel[g] ) {\n        ingredienteCompletoCoquetel[g] = ingredientesCoquetel[g]\n      }else{\n        ingredienteCompletoCoquetel[g] = medidasCoquetel[g] + ' of ' + ingredientesCoquetel[g]\n      }\n\n      \n    }\n\n    let listaIngredientesCoquetel = ingredienteCompletoCoquetel.map((ingrediente) => <li>{ingrediente}</li>);\n\n   return(\n    <>{listaIngredientesCoquetel}</>\n   )\n  }\n\n  /*Const para ativa o ToolTip na Modal para exibir a imagem do Coquetel */\n  const imagemCoquetel = (props) => (\n    <Tooltip {...props}>\n      <img src={coquetel.strDrinkThumb} width={230} alt='Imagem do Coquetel' />\n    </Tooltip>\n  );\n\n  /*Codigo relacionado ao coquetel acabou */\n  /*-------------------------------------------------------------------------------------*/\n\n  return (\n\n    <>\n\n      {/*Uma simples Navbar para mostrar o nome do site*/}\n      <Navbar bg=\"secondary\">\n        <Navbar.Brand href=\"#inicio\" className=\"text-light\"  >RandomRecipes <FaCocktail className=\"text-dark\" size=\"40\" /></Navbar.Brand>\n      </Navbar>\n\n      {/*Form para escolha do tipo da pesquisa*/}\n      <Form>\n        <Form.Row className=\"justify-content-center mt-4\">\n          <Col xs=\"auto\">\n            <Form.Control as=\"select\" id=\"escolha\" onChange={e => setProcuraTipo(e.target.value)}>\n              <option value=\"prato\" >Random Meal</option>\n              <option value=\"coquetel\" >Random Cocktail</option>\n            </Form.Control>\n          </Col>\n          &nbsp;\n          <Col xs=\"auto\">\n            <Button variant=\"warning\" onClick={pesquisaTipo}>Search</Button>\n          </Col>\n        </Form.Row>\n      </Form>\n\n      {/*Modal Prato*/}\n      <Modal\n        show={mostrarPrato}\n        onHide={fecharPrato}\n        backdrop=\"static\"\n        keyboard={false}\n        scrollable={true}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>\n            <h2>\n              {prato.strMeal}\n              &nbsp;\n              <OverlayTrigger\n                placement=\"right\"\n                delay={{ show: 100, hide: 100 }}\n                overlay={imagemPrato}\n              >\n\n                <FaImage />\n              </OverlayTrigger>\n            </h2>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <h5>This is a {prato.strArea} meal</h5>\n          <h5>Category of this meal:</h5>\n          <p>{prato.strCategory}</p>\n          <h5>Ingredients</h5>\n          <ul>\n            <ListaIngredientesPrato />\n          </ul>\n          <h5>Instructions</h5>\n          <p>{prato.strInstructions}</p>\n          <h5>YouTube Link <a href={prato.strYoutube}><BiLinkExternal /></a></h5>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={fecharPrato}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      {/*Modal Coquetel*/}\n      <Modal\n        show={mostrarCoquetel}\n        onHide={fecharCoquetel}\n        backdrop=\"static\"\n        keyboard={false}\n        scrollable={true}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>\n            <h2>\n              {coquetel.strDrink}\n              &nbsp;\n              <OverlayTrigger\n                placement=\"right\"\n                delay={{ show: 100, hide: 100 }}\n                overlay={imagemCoquetel}\n              >\n\n                <FaImage />\n              </OverlayTrigger>\n            </h2>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <h5>Type of Cocktail:</h5>\n          <p>{coquetel.strAlcoholic}</p>\n          <h5>Ingredients</h5>\n          <ul>\n            <ListaIngredientesCoquetel />\n          </ul>\n          <h5>Instructions</h5>\n          <p>{coquetel.strInstructions}</p>\n          <h6>We recommend a {coquetel.strGlass}</h6>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={fecharCoquetel}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}